#+TITLE:       How to write a graphics application with OpenGL
#+DESCRIPTION: Real-time rasterization made possible using this rendering API
#+DATE:        <2023-01-01>
#+IMAGE:       opengl.png
#+TAGS[]:      opengl graphics cpp
#+OPTIONS:     toc:nil num:nil

#+CALL: ../code.org:generate-article-header[:eval yes]()
* {{{TITLE}}}
#+CALL: ../code.org:generate-article-subtitle[:eval yes]()

OpenGL ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod
tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At
vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,
no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit
amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut
labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam
et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata
sanctus est Lorem ipsum dolor sit amet.


#+CAPTION: An org-table for OpenGL
#+ATTR_HTML: :border 2 :rules all :frame border :class center
|---------------+---------+--------+---------|
| rendering api | OpenGL  | Vulkan | DirectX |
|---------------+---------+--------+---------|
| linux support | yes     | yes    | no      |
| good          |         | X      | X       |
| thing 3       | depends | n.a.   | windows |
|---------------+---------+--------+---------|

# endsnippet

More text here

#+BEGIN_SRC js
var b = 1; // globally-scoped
function exampleVar() {
    var a = 0; // function-scoped (or globally-scoped)
    if (true) {
        var a = 1; // reassigns outer x because of hoisting
        var b = 3; // reassigns outer y (gets "hoisted" to the top of scope)
        c = 3;     // implicitly globally scoped
        let d = 7; // block-scoped
        console.log(a, b, c, d); // Output: 1, 3, 3, 7
    }

    console.log(a, b, c); // Output: 13, 3 (no access to z)
}

exampleVar()
#+END_SRC

#+BEGIN_SRC C
#include <gl.h>
/* multiline
   comment */


#define THING 4
#ifdef THING
  static int a = 4;
#else
  static int a = 8;
#endif
int main()
{
    glProgram("String literal");
    if (a)
    {
        printf("Hello", THING);
    }
}
#+END_SRC

#+BEGIN_SRC cpp
#include <gl.h>

#define THING 4
int main()
{
    // comment here
    std::vector<int> ints;
    glProgram("String literal");
    if (a)
    {
        printf("Hello", THING);
    }
}
#+END_SRC


Hello world example code:
#+BEGIN_SRC python
# Python comment
def hello_world(name):
    print(name)
#+END_SRC
